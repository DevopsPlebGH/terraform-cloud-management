name: Create Terraform Cloud Organization

on:
  workflow_dispatch:
    inputs:
      admin_email:
        description: 'Admin Email'
        required: true
        type: string
      name:
        description: 'Organization Name'
        required: true
        type: string

defaults:
  run:
    working-directory: ./terraform

jobs:
  create_org:
    name: Create Terraform Cloud Organization
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Initialize Terraform
        run: |
          terraform init -input=false
      - name: Plan Terraform
        id: plan
        continue-on-error: true
        run: |
          terraform plan -input=false -out=tfplan \
          && terraform show tfplan
        env:
          TF_VAR_admin_email: ${{ inputs.admin_email }}
          TF_VAR_name: ${{ inputs.name }}
          TF_VAR_oauth_token: ${{ secrets.OAUTH_TOKEN }}
      - name: Apply Terraform
        if: steps.plan.outcome == 'success'
        id: apply
        continue-on-error: true
        env:
          TF_VAR_admin_email: ${{ inputs.admin_email }}
          TF_VAR_name: ${{ inputs.name }}
          TF_VAR_oauth_token: ${{ secrets.OAUTH_TOKEN }}
        run: |
         terraform apply -input=false -no-color tfplan
      - name: Create Backend Config
        id: config
        if: steps.apply.outcome == 'success'
        continue-on-error: true
        run: |
          echo 'workspaces { name = "tfc-org-${module.organization.tfe_organization_id}}' > config.remote.tfbackend
          echo hostname = "app.terraform.io" >> config.remote.tfbackend
          echo organization = "${module.organization.tfe_organization_id}" >> config.remote.tfbackend
      - name: Display Contents of tfbackend
        run: |
          cat config.remote.tfbackend
      - name: Statefile artifact
        uses: actions/upload-artifact@v2
        with:
          name: terraformstatefile
          path: ${{ env.artifactPath }}
          if-no-files-found: error
