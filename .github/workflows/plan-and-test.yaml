name: Plan / Test on Pull Request

on:
  pull_request:
    branches: [main, dev, stage, test]
defaults:
  run:
    working-directory: ./terraform

jobs:
  lint:
    name: Lint
    runs-on: macos-latest
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        id: setuptf
        uses: hashicorp/setup-terraform@v1

      - name: Run terraform fmt check
        id: tffmt
        run: terraform fmt -check -diff -recursive ./

  plan-on-test:
    name: Plan and  Test
    runs-on: macos-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        include:
          - environment: testing
            url: https://app.terraform.io/

    environment:
      url: ${{ matrix.url }}
      name: ${{ matrix.environment }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Initialize Terraform
        run: |
          terraform init -input=false

      - name: Plan Terraform
        id: plan
        continue-on-error: true
        run: |
          terraform plan -input=false -no-color -out tfplan \
          && terraform show -no-color tfplan
        env:
          TF_VAR_admin_email: ${{ secrets.ADMIN_EMAIL }}
          TF_VAR_name: ${{ secrets.ORGANIZATION_NAME }}
          TF_VAR_oauth_token: ${{ secrets.OAUTH_TOKEN }}

      - name: Reformat Plan
        run: |
          echo '${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}' \
          | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt

      - name: Put Plan in Env Var
        run: |
          PLAN=$(cat plan.txt)
          echo "PLAN<<EOF" >> $GITHUB_ENV
          echo "$PLAN" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post Plan to GitHub PR
        uses: mshick/add-pr-comment@v1
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ## ${{ matrix.path }} plan
            ```diff
            + Green
            - Red
            ! Orange
            @@ Pink @@
            #Gray
            ${{ env.PLAN }}
            ```

      - name: Post Plan to GitHub PR
        uses: mshick/add-pr-comment@v1
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ## ${{ matrix.path }} plan
            ```diff
            + Green
            - Red
            ! Orange
            @@ Pink @@
            #Gray
            ${{ env.PLAN }}
            ```
