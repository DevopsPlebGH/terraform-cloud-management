name: Create Terraform Cloud Organization

on:
  workflow_dispatch:
    inputs:
      admin_email:
        description: 'Admin Email'
        required: true
        type: string
      name:
        description: 'Organization Name'
        required: true
        type: string

defaults:
  run:
    working-directory: ./terraform

jobs:
  create_org:
    name: Create Terraform Cloud Organization
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Initialize Terraform
        run: |
          terraform init -input=false
      - id: debug
        run: |
          pwd \
          && ls -lah
      - name: Download Statefile Artifact
        id: artifact
        uses: dawidd6/action-download-artifact@v2
        continue-on-error: true
        with:
          github_token: ${{ github.token }}
          workflow: 33485138
          name: terraformstatefile
      - name: Decrypt artifact file
        id: decrypt
        if: steps.artifact.outcome == 'success'
        run: |
          if [ -f ./terraform.tfstate.enc ]; then
            echo "Encrypted statefile found! Decrypting statefile..."
            openssl enc -d -in ./terraform.tfstate.enc -aes-256-cbc -pbkdf2 -pass pass:"${{ secrets.ENCRYPTION_KEY }}" -out ./terraform.tfstate
          else
            echo "Encrypted statefile not found!"
          fi

          ls -lah
      - name: Plan Terraform
        id: plan
        continue-on-error: true
        run: |
          terraform plan -input=false -out=tfplan \
          && terraform show tfplan
        env:
          TF_VAR_admin_email: ${{ inputs.admin_email }}
          TF_VAR_name: ${{ inputs.name }}
          TF_VAR_oauth_token: ${{ secrets.OAUTH_TOKEN }}
      - name: Apply Terraform
        if: steps.plan.outcome == 'success'
        id: apply
        continue-on-error: true
        env:
          TF_VAR_admin_email: ${{ inputs.admin_email }}
          TF_VAR_name: ${{ inputs.name }}
          TF_VAR_oauth_token: ${{ secrets.OAUTH_TOKEN }}
          run: false
        run: |
          terraform plan -input=false -no-color -out tfplan
          terraform apply -input=false -no-color tfplan
          StateFile=./terraform.tfstate
          if [ -f "$StateFile" ]; then
            openssl enc -in ./terraform.tfstate -aes-256-cbc -pbkdf2 -pass pass:"${{ secrets.ENCRYPTION_KEY }}" -out ./terraform.tfstate.enc
            echo "artifactPath=$(pwd)/terraform.tfstate.enc" >> $GITHUB_ENV
          fi
          echo $GITHUB_ENV
      - name: Statefile artifact
        uses: actions/upload-artifact@v2
        with:
          name: terraformstatefile
          path: ${{ env.artifactPath }}
          if-no-files-found: error
